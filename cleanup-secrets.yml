name: Cleanup Secrets (Manual Trigger)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "yes" to confirm history rewrite (DANGER!)'
        required: true
        default: "no"
      dry_run:
        description: 'Dry run mode (true/false): just show findings without cleanup'
        required: true
        default: "true"

jobs:
  scan-and-clean:
    runs-on: ubuntu-latest
    name: Scan for secrets and optionally rewrite history

    steps:
      - name: Checkout full repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python and git-filter-repo
        run: |
          pip install --upgrade ggshield
          sudo apt-get update && sudo apt-get install -y git-filter-repo

      - name: Run ggshield scan (verbose)
        id: scan
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        run: |
          echo "üîç Running ggshield secret scan..."
          ggshield secret scan repo . --verbose | tee scan_output.txt

      - name: Parse findings from verbose output
        id: parse
        run: |
          echo "üîé Analyseren van scan_output.txt..."
          matches=$(grep -oP "(?<=Match: ).*" scan_output.txt | sort -u)

          if [ -z "$matches" ]; then
            echo "‚úÖ Geen secrets gevonden."
            echo "found_any=false" >> $GITHUB_OUTPUT
          else
            echo "‚ö†Ô∏è Gevonden potenti√´le secrets:"
            echo "$matches"
            echo "found_any=true" >> $GITHUB_OUTPUT
            echo "$matches" > found_secrets.txt
          fi

      - name: Conditionally rewrite history with git-filter-repo
        if: ${{ steps.parse.outputs.found_any == 'true' && github.event.inputs.confirm == 'yes' && github.event.inputs.dry_run != 'true' }}
        run: |
          echo "üö® Start herschrijven van Git-geschiedenis met git-filter-repo..."
          mkdir filtered_repo && cd filtered_repo
          git clone --bare $GITHUB_WORKSPACE repo.git
          cd repo.git

          while IFS= read -r secret; do
            echo "üîí Verwijderen van secret: $secret"
            git-filter-repo --force --replace-text <(echo "$secret==REDACTED")
          done < ../../found_secrets.txt

          echo "‚úÖ Cleanup voltooid. Klaar om te pushen met: git push --force"
