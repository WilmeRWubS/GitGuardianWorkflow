name: Cleanup Secrets (Manual Trigger)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "yes" to confirm history rewrite (DANGER!)'
        required: true
        default: "no"
      dry_run:
        description: 'Dry run mode (true/false): just show findings without cleanup'
        required: true
        default: "true"
      secrets_to_replace:
        description: |
          Enter one or more real secrets, separated by commas.
          Example: abc123,ghp_exampletoken456,32cb10apikey...
        required: false
      save_cleaned_repo:
        description: 'Save cleaned .git as downloadable artifact (true/false)'
        required: true
        default: "true"
      delete_all_runs:
        description: 'Also attempt to delete all workflow runs (true/false)'
        required: false
        default: "false"

jobs:
  scan-and-clean:
    runs-on: ubuntu-latest
    name: Scan for secrets and optionally rewrite history

    steps:
      - name: Checkout full repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install ggshield and git-filter-repo
        run: |
          pip install --upgrade ggshield
          sudo apt-get update && sudo apt-get install -y git-filter-repo gh jq

      - name: Run ggshield scan (verbose)
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        run: |
          echo "üîç Starting scan with ggshield (verbose)..."
          ggshield secret scan repo . --verbose | tee scan_output.txt

      - name: Show ggshield scan output
        run: |
          echo "üìã Check the scan output above."
          echo "Look for lines with *** or clear tokens."
          echo "Enter the real secrets manually as secrets_to_replace (separated by commas)."

      - name: Rewrite commits correctly while preserving history (silent mode)
        if: ${{ github.event.inputs.confirm == 'yes' && github.event.inputs.dry_run != 'true' && github.event.inputs.secrets_to_replace != '' }}
        run: |
          mkdir -p cleaned_repo > /dev/null 2>&1
          git clone --quiet --mirror $GITHUB_WORKSPACE cleaned_repo/repo.git > /dev/null 2>&1
          cd cleaned_repo/repo.git
      
          rm -f replacements.txt > /dev/null 2>&1
          IFS=',' read -ra secrets <<< "${{ github.event.inputs.secrets_to_replace }}"
          for secret in "${secrets[@]}"; do
            trimmed=$(echo "$secret" | xargs)
            if [[ "$trimmed" == '***' || "$trimmed" == 'REDACTED' || -z "$trimmed" ]]; then
              echo "::warning::Invalid value '$trimmed' will be skipped." >&2
              continue
            fi
            echo "$trimmed==>REDACTED" >> replacements.txt
          done
      
          git-filter-repo --force --replace-text replacements.txt > /dev/null 2>&1

          echo "‚úÖ Git history filtering completed - ready for download!"

      - name: Prepare cleaned repo for download
        if: ${{ github.event.inputs.save_cleaned_repo == 'true' && github.event.inputs.confirm == 'yes' && github.event.inputs.dry_run != 'true' && github.event.inputs.secrets_to_replace != '' }}
        run: |
          echo "üì¶ Preparing cleaned repo for download..."
          cd cleaned_repo
          
          # Create a tar.gz of the bare repository
          tar -czf cleaned-repo-bare.tar.gz repo.git/
          
          # Also create a normal clone for easier use
          git clone repo.git/ normal-repo/
          cd normal-repo
          tar -czf ../cleaned-repo-normal.tar.gz .
          cd ..
          
          echo "‚úÖ Cleaned repositories prepared:"
          echo "- cleaned-repo-bare.tar.gz (bare repository)"
          echo "- cleaned-repo-normal.tar.gz (normal working directory)"
          ls -la *.tar.gz

      - name: Upload cleaned repository as artifact
        if: ${{ github.event.inputs.save_cleaned_repo == 'true' && github.event.inputs.confirm == 'yes' && github.event.inputs.dry_run != 'true' && github.event.inputs.secrets_to_replace != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: cleaned-repository
          path: |
            cleaned_repo/cleaned-repo-bare.tar.gz
            cleaned_repo/cleaned-repo-normal.tar.gz
          retention-days: 30

      - name: (Optional) Delete all workflow runs via API
        if: ${{ github.event.inputs.delete_all_runs == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üö© Starting deletion of all workflow runs..."

          REPO=${{ github.repository }}
          gh api --paginate "/repos/$REPO/actions/runs" \
            | jq -r '.workflow_runs[].id' \
            | while read -r run_id; do
                echo "üîç Deleting run ID: $run_id"
                gh api -X DELETE "/repos/$REPO/actions/runs/$run_id" && echo "‚úÖ Run $run_id deleted" || echo "‚ùå Failed: $run_id"
              done

      - name: No action performed
        if: ${{ github.event.inputs.confirm != 'yes' || github.event.inputs.dry_run == 'true' || github.event.inputs.secrets_to_replace == '' }}
        run: |
          echo "‚ÑπÔ∏è No rewrite performed. Check if you:"
          echo "- Set 'confirm' to 'yes'"
          echo "- Set 'dry_run' to 'false'"
          echo "- Provided at least 1 valid secret (separated by commas)"
          echo "- Set 'save_cleaned_repo' to 'true' for downloadable backup"

      - name: Instructions for cleaned repository
        if: ${{ github.event.inputs.save_cleaned_repo == 'true' && github.event.inputs.confirm == 'yes' && github.event.inputs.dry_run != 'true' && github.event.inputs.secrets_to_replace != '' }}
        run: |
          echo "üìã Instructions to replace this repository with the cleaned version:"
          echo ""
          echo "1. Download the artifacts from this workflow run"
          echo "2. Make a backup of your current local repository (optional)"
          echo "3. Choose one of the methods below:"
          echo ""
          echo "=== METHOD A: Replace with normal repository ==="
          echo "  tar -xzf cleaned-repo-normal.tar.gz"
          echo "  cd cleaned-repo-normal"
          echo "  git remote set-url origin https://github.com/${{ github.repository }}.git"
          echo "  git push --force --all"
          echo "  git push --force --tags"
          echo ""
          echo "=== METHOD B: Replace with bare repository ==="
          echo "  tar -xzf cleaned-repo-bare.tar.gz"
          echo "  cd repo.git"
          echo "  git remote add origin https://github.com/${{ github.repository }}.git"
          echo "  git push --mirror --force"
          echo ""
          echo "‚ö†Ô∏è  WARNING: This will overwrite the current repository history!"
          echo "üîó Repository URL: https://github.com/${{ github.repository }}"
          echo "üì¶ Artifact download: Go to Actions tab ‚Üí this workflow run ‚Üí scroll down to 'Artifacts'"
          echo "üí° Direct link to Actions: https://github.com/${{ github.repository }}/actions"