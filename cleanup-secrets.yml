name: Cleanup Secrets (Manual Trigger)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "yes" to confirm history rewrite (DANGER!)'
        required: true
        default: "no"
      dry_run:
        description: 'Dry run mode (true/false): just show findings without cleanup'
        required: true
        default: "true"
      secrets_to_replace:
        description: |
          Geef 1 of meerdere √©chte secrets op, gescheiden met een komma.
          Voorbeeld: abc123,ghp_exampletoken456,32cb10apikey...
        required: false
      save_cleaned_repo:
        description: 'Save cleaned .git as downloadable artifact (true/false)'
        required: true
        default: "true"
      delete_all_runs:
        description: 'Also attempt to delete all workflow runs (true/false)'
        required: false
        default: "false"

jobs:
  scan-and-clean:
    runs-on: ubuntu-latest
    name: Scan for secrets en eventueel herschrijf geschiedenis

    steps:
      - name: Checkout volledige repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installeer ggshield en git-filter-repo
        run: |
          pip install --upgrade ggshield
          sudo apt-get update && sudo apt-get install -y git-filter-repo gh jq

      - name: Draai ggshield scan (verbose)
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        run: |
          echo "üîç Start scan met ggshield (verbose)..."
          ggshield secret scan repo . --verbose | tee scan_output.txt

      - name: Toon ggshield scan output
        run: |
          echo "üóå Bekijk de scan-output hierboven."
          echo "Zoek regels met *** of duidelijke tokens."
          echo "Voer de √©chte geheimen handmatig in als secrets_to_replace (gescheiden door komma's)."

      - name: Herschrijf commits correct met behoud van geschiedenis
        if: ${{ github.event.inputs.confirm == 'yes' && github.event.inputs.dry_run != 'true' && github.event.inputs.secrets_to_replace != '' }}
        run: |
          mkdir cleaned_repo
          git clone --mirror $GITHUB_WORKSPACE cleaned_repo/repo.git
          cd cleaned_repo/repo.git

          # Maak een replacement file
          rm -f replacements.txt
          secret_count=0
          IFS=',' read -ra secrets <<< "${{ github.event.inputs.secrets_to_replace }}"
          for secret in "${secrets[@]}"; do
            trimmed=$(echo "$secret" | xargs)
            if [[ "$trimmed" == '***' || "$trimmed" == 'REDACTED' || -z "$trimmed" ]]; then
              continue
            fi
            echo "$trimmed==>REDACTED" >> replacements.txt
            ((secret_count++))
          done
          
          # Gebruik git-filter-repo met replacement file
          git-filter-repo --force --replace-text replacements.txt

      - name: Prepareer cleaned repo voor download
        if: ${{ github.event.inputs.save_cleaned_repo == 'true' && github.event.inputs.confirm == 'yes' && github.event.inputs.dry_run != 'true' && github.event.inputs.secrets_to_replace != '' }}
        run: |
          cd cleaned_repo
          
          # Maak een tar.gz van de bare repository
          tar -czf cleaned-repo-bare.tar.gz repo.git/
          
          # Maak ook een normale clone voor gemakkelijker gebruik
          git clone repo.git/ normal-repo/
          cd normal-repo
          tar -czf ../cleaned-repo-normal.tar.gz .
          cd ..
          
          echo "‚úÖ Cleaned repositories voorbereid:"
          echo "- cleaned-repo-bare.tar.gz (bare repository)"
          echo "- cleaned-repo-normal.tar.gz (normal working directory)"
          ls -la *.tar.gz

      - name: Upload cleaned repository als artifact
        if: ${{ github.event.inputs.save_cleaned_repo == 'true' && github.event.inputs.confirm == 'yes' && github.event.inputs.dry_run != 'true' && github.event.inputs.secrets_to_replace != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: cleaned-repository
          path: |
            cleaned_repo/cleaned-repo-bare.tar.gz
            cleaned_repo/cleaned-repo-normal.tar.gz
          retention-days: 30

      - name: Verificatie van filtering
        if: ${{ github.event.inputs.confirm == 'yes' && github.event.inputs.dry_run != 'true' && github.event.inputs.secrets_to_replace != '' }}
        run: |
          cd cleaned_repo/repo.git
          
          # Check of de secrets nog steeds aanwezig zijn (zonder ze te tonen)
          verification_failed=false
          secret_count=0
          IFS=',' read -ra secrets <<< "${{ github.event.inputs.secrets_to_replace }}"
          for secret in "${secrets[@]}"; do
            trimmed=$(echo "$secret" | xargs)
            if [[ "$trimmed" == '***' || "$trimmed" == 'REDACTED' || -z "$trimmed" ]]; then
              continue
            fi
            
            ((secret_count++))
            
            # Zoek stil naar de secret (output naar /dev/null)
            if git log --all --full-history --source --grep="$trimmed" --pickaxe-all -S"$trimmed" --oneline >/dev/null 2>&1; then
              verification_failed=true
            fi
          done
          
          if [ "$verification_failed" = true ]; then
            echo "‚ö†Ô∏è Sommige secrets zijn mogelijk niet volledig vervangen. Controleer handmatig."
          else
            echo "üéâ Alle secrets succesvol vervangen!"
          fi

      - name: (Optioneel) Verwijder alle workflow runs via API
        if: ${{ github.event.inputs.delete_all_runs == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üö© Start verwijdering van alle workflow runs..."

          REPO=${{ github.repository }}
          gh api --paginate "/repos/$REPO/actions/runs" \
            | jq -r '.workflow_runs[].id' \
            | while read -r run_id; do
                echo "üîç Verwijderen run ID: $run_id"
                gh api -X DELETE "/repos/$REPO/actions/runs/$run_id" && echo "‚úÖ Run $run_id verwijderd" || echo "‚ùå Mislukt: $run_id"
              done

      - name: Geen actie uitgevoerd
        if: ${{ github.event.inputs.confirm != 'yes' || github.event.inputs.dry_run == 'true' || github.event.inputs.secrets_to_replace == '' }}
        run: |
          echo "‚ÑπÔ∏è Geen herschrijving uitgevoerd. Controleer of je:"
          echo "- 'confirm' op 'yes' hebt gezet"
          echo "- 'dry_run' op 'false' hebt gezet"
          echo "- minstens 1 geldige secret hebt opgegeven (gescheiden met komma's)"
          echo "- 'save_cleaned_repo' op 'true' hebt gezet voor downloadbare backup"

      - name: Instructies voor cleaned repository
        if: ${{ github.event.inputs.save_cleaned_repo == 'true' && github.event.inputs.confirm == 'yes' && github.event.inputs.dry_run != 'true' && github.event.inputs.secrets_to_replace != '' }}
        run: |
          echo "üìã Instructies om deze repository te vervangen met de cleaned versie:"
          echo ""
          echo "1. Download de artifacts van deze workflow run"
          echo "2. Maak een backup van je huidige lokale repository (optioneel)"
          echo "3. Kies √©√©n van de onderstaande methodes:"
          echo ""
          echo "=== METHODE A: Vervang met normale repository ==="
          echo "  tar -xzf cleaned-repo-normal.tar.gz"
          echo "  cd cleaned-repo-normal"
          echo "  git remote set-url origin https://github.com/${{ github.repository }}.git"
          echo "  git push --force --all"
          echo "  git push --force --tags"
          echo ""
          echo "=== METHODE B: Vervang met bare repository ==="
          echo "  tar -xzf cleaned-repo-bare.tar.gz"
          echo "  cd repo.git"
          echo "  git remote add origin https://github.com/${{ github.repository }}.git"
          echo "  git push --mirror --force"
          echo ""
          echo "‚ö†Ô∏è  WAARSCHUWING: Dit overschrijft de huidige repository geschiedenis!"
          echo "üîó Repository URL: https://github.com/${{ github.repository }}"
          echo "üì¶ Artifact download: Ga naar Actions tab ‚Üí deze workflow run ‚Üí scroll naar beneden naar 'Artifacts'"
          echo "üí° Direct link naar Actions: https://github.com/${{ github.repository }}/actions"
