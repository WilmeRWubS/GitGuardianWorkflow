name: Auto-Clean Detected Secrets

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "AUTO_CLEAN" to confirm'
        required: true
      dry_run:
        description: 'Preview changes only'
        type: boolean
        default: true

jobs:
  auto-clean-secrets:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'AUTO_CLEAN'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install tools
        run: |
          pip install git-filter-repo ggshield jq
          sudo apt-get update && sudo apt-get install -y jq

      - name: Detect secrets automatically
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        run: |
          echo "üîç Auto-detecting secrets in repository..."
          
          # Scan and extract secrets
          ggshield secret scan repo . --json --exit-zero --all-secrets > full_scan.json
          
          # Create dynamic replacement file
          echo "# Auto-generated secret replacements" > auto_replacements.txt
          echo "" >> auto_replacements.txt
          
          # Extract secrets from scan results and create replacements
          jq -r '
            .[] | 
            select(.type == "commit") | 
            .secrets[]? | 
            select(.validity == "no_checker" or .validity == "valid" or .validity == "invalid") |
            .matches[]? |
            .match as $secret |
            .type as $type |
            if ($type | contains("jwt")) then
              "\($secret)==>REMOVED_JWT_TOKEN"
            elif ($type | contains("api")) then
              "\($secret)==>REMOVED_API_KEY"  
            elif ($type | contains("key")) then
              "\($secret)==>REMOVED_SECRET_KEY"
            else
              "\($secret)==>REMOVED_SECRET"
            end
          ' full_scan.json | sort -u >> auto_replacements.txt
          
          # Add some manual patterns for the specific secrets we know about
          cat >> auto_replacements.txt << 'EOF'
          
          # Known TMDb API key
          32cb10a270e4325217d9e3e3da2418d4==>REMOVED_TMDB_API_KEY
          
          # JWT pattern cleanup
          regex:eyJ[A-Za-z0-9+/=]{10,}\.[A-Za-z0-9+/=]{10,}\.[A-Za-z0-9+/=_-]{10,}==>"REMOVED_JWT_TOKEN"
          EOF
          
          echo "üìù Auto-generated replacements:"
          cat auto_replacements.txt

      - name: Preview replacements
        if: github.event.inputs.dry_run == 'true'
        run: |
          echo "üîç DRY RUN - Preview of replacements:"
          echo ""
          grep -v "^#" auto_replacements.txt | grep -v "^$" | head -20
          echo ""
          echo "‚ö†Ô∏è This is a preview. Set dry_run to false to apply changes."

      - name: Apply replacements
        if: github.event.inputs.dry_run == 'false'
        run: |
          echo "üßπ Applying secret replacements to git history..."
          
          # Create backup
          git branch backup-auto-cleanup-$(date +%Y%m%d-%H%M%S)
          
          # Apply replacements
          git filter-repo --replace-text auto_replacements.txt --force
          
          echo "‚úÖ Replacements applied!"

      - name: Verify and push
        if: github.event.inputs.dry_run == 'false'
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        run: |
          echo "üîç Final verification..."
          
          # Final scan
          ggshield secret scan repo . --exit-zero --json > final_scan.json
          remaining_secrets=$(jq '.[] | select(.type == "commit") | .secrets | length' final_scan.json | jq -s 'add // 0')
          
          if [ "$remaining_secrets" -eq 0 ]; then
            echo "‚úÖ SUCCESS: All secrets removed!"
            git push -f origin main
            echo "üöÄ Clean history pushed to remote"
          else
            echo "‚ö†Ô∏è $remaining_secrets secrets still detected - manual review needed"
            exit 1
          fi